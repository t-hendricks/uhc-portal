name: e2e CI

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - 'main'

jobs:
  install:
    name: E2E - ${{ matrix.os }} - Install - Node ${{ matrix.node-version }}
    concurrency:
      group: e2e-install-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.merge_commit_sha }}'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v4
        with:
          path: './node_modules'
          key: e2e-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Check uncommitted changes
        if: ${{ always() }}
        # Check that Git working tree is clean after running `install` command.
        # The `git` command exits with 1 and fails the build if there are any uncommitted changes.
        run: git diff HEAD --exit-code
  e2e-test:
    name: E2E - ${{ matrix.os }} - e2e Tests - Node ${{ matrix.node-version }}
    concurrency:
      group: e2e-test-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
      cancel-in-progress: true
    needs: [install]
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.merge_commit_sha }}'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v4
        with:
          path: './node_modules'
          key: e2e-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Add hosts
        run: make dev-env-setup
      - name: Check hosts
        run: cat /etc/hosts
      - name: Install cypress
        run: npx cypress install
      - name: Execute tests
        run: |
          yarn start --no-client-overlay &
          NODE_TLS_REJECT_UNAUTHORIZED=0 yarn wait-on -i 5000 https://prod.foo.redhat.com:1337/openshift/
          CYPRESS_TEST_WITHQUOTA_USER=${{ secrets.CYPRESS_TEST_WITHQUOTA_USER }} CYPRESS_TEST_WITHQUOTA_PASSWORD=${{ secrets.CYPRESS_TEST_WITHQUOTA_PASSWORD }} TERM=xterm LC_ALL=C.UTF-8 LANG=C.UTF-8 yarn e2e-test
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: 2e2-facts
          retention-days: 5
          path: |
            cypress/screenshots/
            cypress/videos/
